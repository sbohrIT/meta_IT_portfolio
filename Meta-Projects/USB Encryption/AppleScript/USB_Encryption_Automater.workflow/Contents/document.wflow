<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>444.42</string>
	<key>AMApplicationVersion</key>
	<string>2.9</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>on run {input, parameters}		-- List all Drives in Volumes folder	tell application "Terminal"		do shell script "ls /Volumes"	end tell		-- Set Variable to current username	tell application "System Events"		set U to name of current user	end tell		-- Assign Disk Name to current username variable	try		tell application "Finder"			set name of disk "KINGSTON" to U		end tell	end try				--CHECK IF DISK HAS DATA		try		tell application "Terminal"			set usbData to do shell script "df -h /Volumes/sbohr | grep '/dev/disk3' | awk '{print $3}'"		end tell	end try		--display dialog usbData			-- Multi Line Comment START 	--(*		--CHECK IF DISK IS ENCRYPTED BEFORE REFORMATTING	#################################################	--Check If Encryption is Completed		try		tell application "Terminal"						set encryptionStatus to do shell script "diskutil cs list" &amp; "| grep 'Conversion' "					end tell				-- encryptionStatus variable value check		--display dialog "Encryption Status:" &amp; encryptionStatus			on error		display dialog "This USB Device is not encrypted and can not securely store data"		set encryptionStatus to "FAIL"	end try			--If Encryption Status is Complete End Script	if (encryptionStatus is equal to "        Conversion Status:       Complete") then		display dialog "This USB Device is Encrypted and can securely store data"		return			else				display dialog "An Unencrypted USB Device was detected, begining Encryption process.."				-- Reformat Disk to Journaled GUID Partition Table		-- Partition Disk				-- LOGIC TO DECIDE WHAT TO DO IF USB HAS DATA		#############################################				if (usbData is equal to "111Mi") then						display dialog "USB Device has no data, re-formatting drive"						tell application "Terminal"				do shell script "diskutil list"				do shell script "diskutil eraseDisk JHFS+ KINGSTON GPT disk2"				do shell script "diskutil partitionDisk disk2 GPT JHFS+ New 0b"			end tell						-- Assign Disk Name after Re-Format			tell application "Finder"				set name of disk "New" to U			end tell					else						display dialog "USB Device has data, will not re-format drive"									(*	-- Assign Disk Name after Re-Format		tell application "Finder"			set name of disk "New" to U		end tell *)									-- Prompt for Encryption Password			set defaultanswer to display dialog "Please create a password for this external drive." default answer "" with icon stop buttons {"Cancel", "Continue"} default button "Continue" with hidden answer			set x to text returned of defaultanswer									-- Encrypt Drive			tell application "Finder"				if disk U exists then										tell application "Terminal"												--do shell script "sudo diskutil disableOwnership disk2"						do shell script "diskutil cs convert disk2s2 -passphrase " &amp; " " &amp; x											end tell									end if							end tell						-- Display Window stating Encryption has begun			display dialog "Your USB Drive is encrypting. Please remember your chosen password to unlock drive for future use"									-- End Encryption Check		end if				-- End Data Check	end if		-- Multi Line Comment END 	--*)	###############################################################					-- END OF FOLDER ACTION	--end adding folder items to			return inputend run</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>3BF81065-AF42-49E5-A6A2-957A875D1AA1</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>9EA73284-B243-4920-9209-07DD0592B075</string>
				<key>UUID</key>
				<string>0F100F25-F9D6-4323-97C4-2E3B24BEEC6E</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>conversionLabel</key>
				<integer>0</integer>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>529.000000:315.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>folderActionFolderPath</key>
		<string>/Volumes</string>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.folderAction</string>
	</dict>
</dict>
</plist>
